//****************************************************************************//Copyright © 2005-2006. Adobe Macromedia Software LLC. All rights reserved.//The following Code is subject to all restrictions //contained in the End User License Agreement accompanying//this product.//****************************************************************************import MMQuizzingV3.MMQuizClasses.SlideInfo;class MMQuizzingV3.MMQuizClasses.QuizParams extends Object {		// Incomi	var quizID:Number = 0;						// Unique identifier for this quiz	var isTracked:Boolean = false;				// Is this quiz tracked or is it a survey (not scored)?		var _numQuizAttemptsAllowed:Number = 1;		// How many times can the user take this quiz		var minScore:Number = 0;					// Minimum score for the quiz	var maxScore:Number = 150;					// Must be the sum of the weightings of all the questions	var passingScore:Number = 60;				// Passing score for the quiz.  Must be > 0 and must be 												// between minScore and maxScore		var passingGradeAction:String;				// Action to take after user has passed the quiz and after												// they have seen the passingScoreSlide (if any).  One of												// "continue", "gotoSlide", "url", "movie", "email".  Just												// like actionType for Feedback class		var passingGradeActionArg1:String;			// First arg for passing grade action.  E.g. the slide												// to go to if passingGradeAction is "gotoSlide"		var passingGradeActionArg2:String;			// Second arg for passing grade action.  E.g. if the												// passingGradeAction is "url", the second arg is												// what browser window to open the new url in -- same as												// window arg for Flash getURL() .		var failingGradeAction:String;				// Analogous to passingGradeAction	var failingGradeActionArg1:String;			// Analogous to passingGradeActionArg1	var failingGradeActionArg2:String;			// Analogous to passingGradeActionArg2		var anyGradeAction:String;					// Default action to take if no passing or failing grade action exists	var anyGradeActionArg1:String;				// Analogous to passsing/failingGradeAction(Arg)	var anyGradeActionArg2:String;	var questionAdvance:String = "mustAnswer";	// enumeration of "mustAnswer", "mustAnswerCorrectly" or "optional"												// Indicates whether or not the user is allowed to skip past any question												// in the quiz		var quizAdvance:String = "mustTake";		// enumeration of "mustTake", "mustPass", or "optional"												// Indicates whether or not the user is allowed to skip the quiz entirely.													var showProgress:String = "minimal"; 		// enumeration of "full", "minimal", or "none"												// Currently unused														var allowBackwardMovementInQuiz:Boolean = true;			// Controls whether the user is allowed to move backward to previously-answered															// questions while a quiz is in progress														var showFinishButton:Boolean = false;		// If true, show a Finish button on each quiz slide.  Button must be called												// _quizFinishButton			var firstSlideInQuiz:SlideInfo = null;		// First slide in quiz. 	var lastSlideInQuiz:SlideInfo = null;		// Last slide in quiz. Includes scoring screen.		var allowSkipPassScoreSlide:Boolean;		// If true, the user is allowed to skip/scrub past the pass scoring slide after they												// finish the quiz			var allowSkipFailScoreSlide:Boolean = true;	// Analogous to allowSkipFailScoreSlide			var allowSkipAnyScoreSlide:Boolean = true;	// Analogous to passScoreSlide		var allowReviewMode:Boolean = true;			// Analogous to allowSkipFailScoreSlide		var passedScoreFeedback:String = "Congratulations, you passed.";	// Default string displayed on scoring screen if user passed	var passScoreSlide:SlideInfo = null;		// if exists must come before failScoreSlide												// Points to the scoring slide that the user is taken to if they pass the quiz.												// Note that this is different than the passingGradeAction.  The scoring slide												// is shown before the passing/failing action is taken.	var failedScoreFeedback:String = "Sorry, you failed.";				// Default string displayed on scoring screen if user failed.	var failScoreSlide:SlideInfo = null;		// if exists must come after passScoreSlide												// Analogous to passScoreSlide	var anyScoreSlide:SlideInfo = null;			// if exists, then passScoreSlide and failScoreSlide must be null												// Analogous to pass/failScoreSlide.  Default scoring slide used if 												// no pass/fail score slide explicitly set 	function get numQuizAttemptsAllowed():Number	{		return _numQuizAttemptsAllowed;	}	function set numQuizAttemptsAllowed(num:Number)	{		if (num == -1) {			num = 9999;		}		_numQuizAttemptsAllowed = num;	}	function getSlideType(theSlide:SlideInfo):String	{		//trace("anyScoreSlide = " + anyScoreSlide);		if (passScoreSlide && passScoreSlide.sameSlideAs(theSlide)) {			return "passScoreSlide";		} else if (failScoreSlide && failScoreSlide.sameSlideAs(theSlide)) {			return "failScoreSlide";		} else if (anyScoreSlide && anyScoreSlide.sameSlideAs(theSlide)) {			return "anyScoreSlide";		} else {		//trace("theSlide.questionsOnSlide = " + theSlide.questionsOnSlide);			if (theSlide.questionsOnSlide.length > 0) {				return "question";			}		}		return "";	}	function QuizParams()	{	}		function init()	{		super.init();	}	}